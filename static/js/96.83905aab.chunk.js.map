{"version":3,"file":"static/js/96.83905aab.chunk.js","mappings":"iOACA,EAA4B,+BAA5B,EAAwE,gCAAxE,EAA2H,sCAA3H,EAAsP,qC,SC6DtP,EAxDe,WACb,OAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAgBF,EAAaG,IAAI,SACjCC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACc,OAAlBJ,GAIJK,EAAAA,GAAmBL,GAAeM,MAAK,SAAAC,GAAC,OAAIX,EAAaW,EAAEC,QAAnB,GACzC,GAAE,CAACR,IAaJ,OACE,4BACE,gBAAKS,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAkBC,SAdnB,SAAAJ,GACpBA,EAAEK,iBAEF,IAAQC,EAAUN,EAAEO,cAAcC,SAASC,MAAnCH,MAERd,EAAgB,CAAEiB,MAAOH,IAGzBN,EAAEO,cAAcG,OACjB,EAKK,WACE,kBAEER,UAAWC,EACXQ,KAAK,OACLC,YAAY,mBACZC,KAAK,WAEP,mBAAQX,UAAWC,EAAwBQ,KAAK,gBAGrC,OAAdvB,IACC,wBACGA,EAAU0B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACb,yBACE,UAAC,KAAD,CAASC,GAAE,kBAAaF,GAAMG,MAAOvB,EAArC,UACGqB,EAAgB,QAFZD,EADI,QAWxB,C","sources":["webpack://react-homework-template/./src/components/pages/Movie/SearchMovie.module.css?4ac8","components/pages/Movie/SearchMovie.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"SearchMovie_Searchbar__a7R9K\",\"SearchForm\":\"SearchMovie_SearchForm__IB6Jm\",\"SearchFormButton\":\"SearchMovie_SearchFormButton__3W-uZ\",\"SearchFormButtonLabel\":\"SearchMovie_SearchFormButtonLabel__UYpvo\",\"SearchFormInput\":\"SearchMovie_SearchFormInput__GMY99\"};","import { useEffect, useState } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\n\nimport * as API from '../../API/Api';\nimport style from './SearchMovie.module.css';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState(null);\n  // const [query, setQuery] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieToSearch = searchParams.get('movie');\n  const location = useLocation();\n\n\n  useEffect(() => {\n    if (movieToSearch === null) {\n      return;\n    }\n\n    API.getSerchMovies(movieToSearch).then(e => setMovieList(e.results));\n  }, [movieToSearch]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const { value } = e.currentTarget.elements.movie;\n\n    setSearchParams({ movie: value });\n    // setQuery(value);\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <div>\n      <div className={style.Searchbar}>\n        <form className={style.SearchForm} onSubmit={submitHandler}>\n          <input\n            // value={query}\n            className={style.SearchFormInput}\n            type=\"text\"\n            placeholder=\"input movie name\"\n            name=\"movie\"\n          />\n          <button className={style.SearchFormButton} type=\"submit\"></button>\n        </form>\n      </div>\n      {movieList !== null && (\n        <ul>\n          {movieList.map(({ id, original_title }) => (\n            <li key={id}>\n              <NavLink to={`/movies/${id}`} state={location}>\n                {original_title}{' '}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["useState","movieList","setMovieList","useSearchParams","searchParams","setSearchParams","movieToSearch","get","location","useLocation","useEffect","API","then","e","results","className","style","onSubmit","preventDefault","value","currentTarget","elements","movie","reset","type","placeholder","name","map","id","original_title","to","state"],"sourceRoot":""}